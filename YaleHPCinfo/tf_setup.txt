###########################################
This text file is supposed to illustrate how to get tensorflow and tflearn to work on Grace @ YaleHPC

##########################################


**INSTALLING ANACONDA**

Although anaconda is available as a "module" at YaleHPC, trying to install things by loading this module often causes permission errors while installation. Thus it is very strongly recommended to install anaconda in your home directory so that you can acess it fully.

1. Login to grace

2. Open an interactive shell (GPU not needed for installation) 
srun --pty -p interactive bash 

3. Get the repo you want (this URL may not be the most recent version -- CHECK FOR MOST RECENT VERSION FIRST)
wget https://repo.continuum.io/archive/Anaconda2-5.0.1-Linux-x86_64.sh

4. Install Anaconda
bash Anaconda2-5.0.1-Linux-x86_64.sh -b -p $HOME/anaconda2
rm Anaconda2-5.0.1-Linux-x86_64.sh



**INSTALLING TENSORFLOW AND TFLEARN**

Now we will create a conda environment called tensoflow and install tensorflow, tflearn and keras within it.

There are some compatibility issues to keep in mind. Every version of TF will not work with every version of CUDA,cuDNN,Python, TFL and Keras. So, I tested out a few combinations and here are my personal recommendations as of Aug. 20,2019. Google maintains a good copy of their advice at --> https://www.tensorflow.org/install/source#linux

python--numpy--tensorflow-gpu---CUDA--cuDNN--tflearn--keras 
2.7.14 -- 1.16.4 -- 1.12.0 -- CUDA/9.0.176 -- cuDNN/7.1.4 -- 0.3.2 -- 2.1.5 -- stored on grace anaconda2 env called tensorflow
3.6.9  -- 1.17.0 -- 1.12.0 -- CUDA/9.0.176 -- cuDNN/7.1.4 --0.3.2 -- 2.2.4 -- stored on grace anaconda3 env called tf112
3.6.9 -- 1.17.0 -- 1.13.1 -- CUDA/10.0.130 -- cuDNN/7.6.0 -- XXXXX -- 2.2.4 -- stored on grace anaconda3 env called tf113

The last env tf113 may produce some degradation warnings from keras and tflearn if you choose to install tflearn 0.3.2
The first two running TF1.12 should be running without any complaints from tflearn or keras 


##IF YOU ARE NOT USING PYTHON 2.7 CHANGE THE URLs APPROPRIATELY FOR THE PROPER PYTHON VERSION##

export PATH=$HOME/anaconda2/bin:$PATH      #Add Anaconda to present path
conda create -n tensorflow              #Create a conda environment called tensorflow
source activate tensorflow                 #Activate the environment we just created
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.4.0-cp27-none-linux_x86_64.whl #Replace this with the appropriate version you want to install  
pip install --ignore-installed --upgrade $TF_BINARY_URL
pip install tflearn
source deactivate



**RUNNING TFLEARN AND TENSORFLOW**
ssh into grace and then go into a gpu
srun -p gpu -c 10 --gres=gpu:1 --pty -t 1:00:00 bash     # one GPU for one hour
source ml_init.sh          #This file contains a bunch of commands for activating the anaconda environment and loading cuda8.0 and cuDNN8.0-v6
			   #This file is located in the YaleHPCInfo directory. Copy this into your home directory for it work.


python
>>> import tensorflow as tf
>>> import tflearn as tfl
>>> hello = tf.constant('Hello, TensorFlow!')
>>> sess = tf.Session()
>>> print(sess.run(hello))
>>> a = tf.constant(10)
>>> b = tf.constant(32)
>>> print(sess.run(a + b))


If these commands work, then you are all set!! 
 
